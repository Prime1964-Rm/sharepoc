{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","shareData","title","text","url","newClick","e","a","console","log","undefined","navigator","share","data","onClick","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA0CeA,MAvCf,WACE,IAAMC,EAAY,CAChBC,MAAO,MACPC,KAAM,gCACNC,IAAK,iCAGDC,EAAQ,uCAAE,WAAMC,GAAN,SAAAC,EAAA,yDACdC,QAAQC,IAAIH,GACZE,QAAQC,IAAI,sBACQC,IAAlBC,UAAUC,MAHE,0CAKND,UAAUC,MAAMX,GALV,OAMXO,QAAQC,IAAI,2BAND,gDAQZD,QAAQC,IAAR,MARY,yDAAF,sDAad,OACE,gCACE,cAAC,IAAD,CACEI,KAAM,CACJV,KAAM,+CACNC,IAAK,gCACLF,MAAO,aAETY,QAAS,kBAAMN,QAAQC,IAAI,yBAN7B,SAQE,0DAEF,wBAAQM,GAAG,MAAMD,QAAST,EAA1B,0BCvBSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b1b7e7be.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { RWebShare } from \"react-web-share\";\n\nfunction App() {\n  const shareData = {\n    title: 'MDN',\n    text: 'Learn web development on MDN!',\n    url: 'https://developer.mozilla.org',\n  }\n\n  const newClick= async(e)=>{\n    console.log(e)\n    console.log(\"I WAS CLICKED\")\n   if(navigator.share!==undefined){\n    try {\n      await navigator.share(shareData)\n       console.log('MDN shared successfully')\n    } catch(err) {\n      console.log(err)\n    }\n   }\n  }\n\n  return (\n    <div>\n      <RWebShare\n        data={{\n          text: \"Like humans, flamingos make friends for life\",\n          url: \"https://on.natgeo.com/2zHaNup\",\n          title: \"Flamingos\",\n        }}\n        onClick={() => console.log(\"shared successfully!\")}\n      >\n        <button >Share ðŸ”—</button>\n      </RWebShare>\n      <button id=\"btn\" onClick={newClick}>\n        Share me\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}